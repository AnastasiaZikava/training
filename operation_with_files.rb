#считывает весь файл в виде строки

config = IO.read('example.txt')
config.class    #=> String

# метод bin:пode переключает поток в двоичный режим. 


############################################################################################################
file = File.new("somefile")
file. flock ( File: :LOCK_ЕХ) # Монопольная блокировка; никакой другой процесс не может обратиться к файлу.
file.flock(File: :LOCK_UN) # Разблокировать.
file.flock(File: :LOCK_SH) # Разделяемая блокировка (другие процессы могут сделать то же самое). 
file.flock(File: :LOCK_UN) # Разблокировать.
locked = file.flock(Flle: :LOСK_EX File: :LOCK_NB) # Пытаемся заблокировать файл, но не приостанавливаем программу, если
												   # не получилось; в таком случае переменная locked будет равна false. 


############################################################################################################

#Методы mtime, atime и ctime класса File возвращают временные метки, не требуя
# предварительного открытия файла или даже создания объекта File.

tl = File. mtime ( "sonefile")
# Thu Jan 04 09:03:0О GMT-6:0C 2001
t2 = Fiie.atime("sonefile")
# Tue Jan 09 10:03:34 GMT-6:00 20Jl
tЗ = Fiie.ctime("somefile")
# Sun Nov 26 23:48:32 GMT-6:0C 2000 		

############################################################################################################
